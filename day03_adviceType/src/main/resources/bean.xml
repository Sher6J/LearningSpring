<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的Ioc，把service对象配置进来-->
    <bean id="accountService" class="cn.sher6j.service.impl.AccountServiceImpl"></bean>

    <!--配置Logger类-->
    <bean id="logger" class="cn.sher6j.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* cn.sher6j.service.impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知，在切入点方法执行之前执行-->
<!--            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>-->
            <!--配置后置通知，在切入点方法正常执行之后执行，它和异常通知永远只能执行一个-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->
            <!--配置异常通知，在切入点方法执行产生异常之后执行，它和后置通知永远只能执行一个-->
<!--            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->
            <!--配置最终通知，无论切入点方法是否正常执行它都会在其后面执行-->
<!--            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->

            <!--配置切入点表达式 此标签写在aop:aspect标签内部，只能当前切面使用
                                此标签还可以写在aop:aspect标签外面，此时所有切面可用，但是约束！！！写字外面必须写在切面之前！
                    id属性用于指定表达式的唯一标识
                    expression属性用于指定表达式内容-->
<!--            <aop:pointcut id="pt1" expression="execution(* cn.sher6j.service.impl.*.*(..))"/>-->

            <!--配置环绕通知 详细注释见Logger类-->
            <aop:around method="arroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>

</beans>